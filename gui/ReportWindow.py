# -*- coding: utf-8 -*-
import sys
sys.path.append('gui')
from PyQt5 import QtCore, QtGui, QtWidgets
import cv2 as cv


# This class defines the "Einstellungen des Reports" window, which is used for setting the finally generated reports
# It's Qt-Designer files are "ReportWindow.ui" in folder "uifiles"
class Ui_ReportWindow(object):
    def setupUi(self, ReportWindow):

        ReportWindow.setObjectName("ReportWindow")
        ReportWindow.resize(1122, 791)
        ReportWindow.setMinimumSize(QtCore.QSize(0, 0))
        ReportWindow.setMaximumSize(QtCore.QSize(1401, 100000))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        ReportWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon_materials/6.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        ReportWindow.setWindowIcon(icon)

        self.DetailsGroupBox = QtWidgets.QGroupBox(ReportWindow)
        self.DetailsGroupBox.setGeometry(QtCore.QRect(30, 110, 1061, 611))
        self.DetailsGroupBox.setMinimumSize(QtCore.QSize(1061, 611))
        self.DetailsGroupBox.setMaximumSize(QtCore.QSize(1061, 611))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(10)
        self.DetailsGroupBox.setFont(font)
        self.DetailsGroupBox.setObjectName("DetailsGroupBox")

        self.ReportTitelLabel = QtWidgets.QLabel(self.DetailsGroupBox)
        self.ReportTitelLabel.setGeometry(QtCore.QRect(20, 30, 161, 31))
        self.ReportTitelLabel.setMinimumSize(QtCore.QSize(161, 31))
        self.ReportTitelLabel.setMaximumSize(QtCore.QSize(161, 31))
        fontelement = QtGui.QFont()
        fontelement.setFamily("Verdana")
        fontelement.setBold(False)
        fontelement.setPointSize(10)
        self.ReportTitelLabel.setFont(fontelement)
        self.ReportTitelLabel.setObjectName("ReportTitelLabel")

        self.ReportTitelLineEdit = QtWidgets.QLineEdit(self.DetailsGroupBox)
        self.ReportTitelLineEdit.setGeometry(QtCore.QRect(182, 30, 231, 31))
        self.ReportTitelLineEdit.setMinimumSize(QtCore.QSize(231, 31))
        self.ReportTitelLineEdit.setMaximumSize(QtCore.QSize(231, 31))
        self.ReportTitelLineEdit.setFont(fontelement)
        self.ReportTitelLineEdit.setObjectName("ReportTitelLineEdit")

        self.TestIngenieurLabel = QtWidgets.QLabel(self.DetailsGroupBox)
        self.TestIngenieurLabel.setGeometry(QtCore.QRect(450, 30, 131, 31))
        self.TestIngenieurLabel.setMinimumSize(QtCore.QSize(131, 31))
        self.TestIngenieurLabel.setMaximumSize(QtCore.QSize(131, 31))
        self.TestIngenieurLabel.setFont(fontelement)
        self.TestIngenieurLabel.setObjectName("TestIngenieurLabel")

        self.TestIngenieurLineEdit = QtWidgets.QLineEdit(self.DetailsGroupBox)
        self.TestIngenieurLineEdit.setGeometry(QtCore.QRect(580, 30, 156, 31))
        self.TestIngenieurLineEdit.setMinimumSize(QtCore.QSize(156, 31))
        self.TestIngenieurLineEdit.setMaximumSize(QtCore.QSize(156, 31))
        self.TestIngenieurLineEdit.setFont(fontelement)
        self.TestIngenieurLineEdit.setObjectName("TestIngenieurLineEdit")

        self.TestDatumLabel = QtWidgets.QLabel(self.DetailsGroupBox)
        self.TestDatumLabel.setGeometry(QtCore.QRect(770, 30, 101, 31))
        self.TestDatumLabel.setMinimumSize(QtCore.QSize(101, 31))
        self.TestDatumLabel.setMaximumSize(QtCore.QSize(101, 31))
        self.TestDatumLabel.setFont(fontelement)
        self.TestDatumLabel.setObjectName("TestDatumLabel")

        self.TestDatumLineEdit = QtWidgets.QLineEdit(self.DetailsGroupBox)
        self.TestDatumLineEdit.setGeometry(QtCore.QRect(880, 30, 156, 31))
        self.TestDatumLineEdit.setMinimumSize(QtCore.QSize(156, 31))
        self.TestDatumLineEdit.setMaximumSize(QtCore.QSize(156, 31))
        self.TestDatumLineEdit.setFont(fontelement)
        self.TestDatumLineEdit.setObjectName("TestDatumLineEdit")

        self.BenutzerNotizenLabel = QtWidgets.QLabel(self.DetailsGroupBox)
        self.BenutzerNotizenLabel.setGeometry(QtCore.QRect(20, 75, 151, 31))
        self.BenutzerNotizenLabel.setMinimumSize(QtCore.QSize(151, 31))
        self.BenutzerNotizenLabel.setMaximumSize(QtCore.QSize(151, 31))
        self.BenutzerNotizenLabel.setFont(fontelement)
        self.BenutzerNotizenLabel.setObjectName("BenutzerNotizenLabel")

        self.BenutzerNotizenTextEdit = QtWidgets.QTextEdit(self.DetailsGroupBox)
        self.BenutzerNotizenTextEdit.setGeometry(QtCore.QRect(20, 110, 391, 101))
        self.BenutzerNotizenTextEdit.setMinimumSize(QtCore.QSize(391, 101))
        self.BenutzerNotizenTextEdit.setMaximumSize(QtCore.QSize(391, 101))
        self.BenutzerNotizenTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.BenutzerNotizenTextEdit.setFont(fontelement)
        self.BenutzerNotizenTextEdit.setObjectName("BenutzerNotizenTextEdit")

        self.ReportIconLabel = QtWidgets.QLabel(self.DetailsGroupBox)
        self.ReportIconLabel.setGeometry(QtCore.QRect(80, 270, 271, 271))
        self.ReportIconLabel.setMinimumSize(QtCore.QSize(271, 271))
        self.ReportIconLabel.setMaximumSize(QtCore.QSize(271, 271))
        self.ReportIconLabel.setText("")
        self.ReportIconLabel.setObjectName("ReportIconLabel")

        self.AnzeigeEinstellungenGroupBox = QtWidgets.QGroupBox(self.DetailsGroupBox)
        self.AnzeigeEinstellungenGroupBox.setGeometry(QtCore.QRect(440, 80, 601, 511))
        self.AnzeigeEinstellungenGroupBox.setMinimumSize(QtCore.QSize(601, 501))
        self.AnzeigeEinstellungenGroupBox.setMaximumSize(QtCore.QSize(601, 511))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(10)
        self.AnzeigeEinstellungenGroupBox.setFont(font)
        self.AnzeigeEinstellungenGroupBox.setObjectName("AnzeigeEinstellungenGroupBox")

        self.AllgemeinGroupBox = QtWidgets.QGroupBox(self.AnzeigeEinstellungenGroupBox)
        self.AllgemeinGroupBox.setGeometry(QtCore.QRect(20, 30, 561, 71))
        self.AllgemeinGroupBox.setMinimumSize(QtCore.QSize(561, 71))
        self.AllgemeinGroupBox.setMaximumSize(QtCore.QSize(561, 71))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(10)
        self.AllgemeinGroupBox.setFont(font)
        self.AllgemeinGroupBox.setObjectName("AllgemeinGroupBox")

        self.AllgemeinSeiteCheckBox = QtWidgets.QCheckBox(self.AllgemeinGroupBox)
        self.AllgemeinSeiteCheckBox.setGeometry(QtCore.QRect(260, 30, 71, 31))
        self.AllgemeinSeiteCheckBox.setMinimumSize(QtCore.QSize(71, 31))
        self.AllgemeinSeiteCheckBox.setMaximumSize(QtCore.QSize(71, 31))
        self.AllgemeinSeiteCheckBox.setFont(fontelement)
        self.AllgemeinSeiteCheckBox.setObjectName("AllgemeinSeiteCheckBox")

        self.AllgemeinBenutzerNotizenCheckBox = QtWidgets.QCheckBox(self.AllgemeinGroupBox)
        self.AllgemeinBenutzerNotizenCheckBox.setGeometry(QtCore.QRect(10, 30, 171, 31))
        self.AllgemeinBenutzerNotizenCheckBox.setMinimumSize(QtCore.QSize(171, 31))
        self.AllgemeinBenutzerNotizenCheckBox.setMaximumSize(QtCore.QSize(171, 31))
        self.AllgemeinBenutzerNotizenCheckBox.setFont(fontelement)
        self.AllgemeinBenutzerNotizenCheckBox.setObjectName("AllgemeinBenutzerNotizenCheckBox")

        self.AllgemeinDiagrammCheckBox = QtWidgets.QCheckBox(self.AllgemeinGroupBox)
        self.AllgemeinDiagrammCheckBox.setGeometry(QtCore.QRect(430, 30, 191, 31))
        self.AllgemeinDiagrammCheckBox.setMinimumSize(QtCore.QSize(191, 31))
        self.AllgemeinDiagrammCheckBox.setMaximumSize(QtCore.QSize(191, 31))
        self.AllgemeinDiagrammCheckBox.setFont(fontelement)
        self.AllgemeinDiagrammCheckBox.setObjectName("AllgemeinDiagrammCheckBox")

        self.TestparameterGroupBox = QtWidgets.QGroupBox(self.AnzeigeEinstellungenGroupBox)
        self.TestparameterGroupBox.setGeometry(QtCore.QRect(20, 250, 561, 111))
        self.TestparameterGroupBox.setMinimumSize(QtCore.QSize(561, 111))
        self.TestparameterGroupBox.setMaximumSize(QtCore.QSize(561, 111))
        self.TestparameterGroupBox.setCheckable(True)
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(10)
        self.TestparameterGroupBox.setFont(font)
        self.TestparameterGroupBox.setObjectName("TestparameterGroupBox")

        self.Effectivefrequency = QtWidgets.QCheckBox(self.TestparameterGroupBox)
        self.Effectivefrequency.setGeometry(QtCore.QRect(10, 30, 211, 31))
        self.Effectivefrequency.setMinimumSize(QtCore.QSize(211, 31))
        self.Effectivefrequency.setMaximumSize(QtCore.QSize(211, 31))
        self.Effectivefrequency.setFont(fontelement)
        self.Effectivefrequency.setObjectName("Effectivefrequency")

        self.Messzeit = QtWidgets.QCheckBox(self.TestparameterGroupBox)
        self.Messzeit.setGeometry(QtCore.QRect(430, 30, 101, 31))
        self.Messzeit.setMinimumSize(QtCore.QSize(101, 31))
        self.Messzeit.setMaximumSize(QtCore.QSize(101, 31))
        self.Messzeit.setFont(fontelement)
        self.Messzeit.setObjectName("Messzeit")

        self.Attenuation = QtWidgets.QCheckBox(self.TestparameterGroupBox)
        self.Attenuation.setGeometry(QtCore.QRect(10, 70, 131, 31))
        self.Attenuation.setMinimumSize(QtCore.QSize(131, 31))
        self.Attenuation.setMaximumSize(QtCore.QSize(131, 31))
        self.Attenuation.setFont(fontelement)
        self.Attenuation.setObjectName("Attenuation")

        self.Detektor = QtWidgets.QCheckBox(self.TestparameterGroupBox)
        self.Detektor.setGeometry(QtCore.QRect(260, 30, 101, 31))
        self.Detektor.setMinimumSize(QtCore.QSize(101, 31))
        self.Detektor.setMaximumSize(QtCore.QSize(101, 31))
        self.Detektor.setFont(fontelement)
        self.Detektor.setObjectName("Detektor")

        self.Grenzwerte = QtWidgets.QCheckBox(self.TestparameterGroupBox)
        self.Grenzwerte.setGeometry(QtCore.QRect(260, 70, 121, 31))
        self.Grenzwerte.setMinimumSize(QtCore.QSize(121, 31))
        self.Grenzwerte.setMaximumSize(QtCore.QSize(121, 31))
        self.Grenzwerte.setFont(fontelement)
        self.Grenzwerte.setObjectName("Grenzwerte")

        self.AnzeigeEinsteuungenToolButton_1 = QtWidgets.QToolButton(self.AnzeigeEinstellungenGroupBox)
        self.AnzeigeEinsteuungenToolButton_1.setGeometry(QtCore.QRect(20, 460, 171, 31))
        self.AnzeigeEinsteuungenToolButton_1.setMinimumSize(QtCore.QSize(171, 31))
        self.AnzeigeEinsteuungenToolButton_1.setMaximumSize(QtCore.QSize(171, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        self.AnzeigeEinsteuungenToolButton_1.setFont(font)
        self.AnzeigeEinsteuungenToolButton_1.setAutoRaise(True)
        self.AnzeigeEinsteuungenToolButton_1.setStyleSheet("color:rgb({},{},{},255)".format(92, 174, 219))
        self.AnzeigeEinsteuungenToolButton_1.setObjectName("AnzeigeEinsteuungenToolButton_1")

        self.AnzeigeEinsteuungenToolButton_2 = QtWidgets.QToolButton(self.AnzeigeEinstellungenGroupBox)
        self.AnzeigeEinsteuungenToolButton_2.setGeometry(QtCore.QRect(240, 460, 181, 31))
        self.AnzeigeEinsteuungenToolButton_2.setMinimumSize(QtCore.QSize(181, 31))
        self.AnzeigeEinsteuungenToolButton_2.setMaximumSize(QtCore.QSize(181, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.AnzeigeEinsteuungenToolButton_2.setFont(font)
        self.AnzeigeEinsteuungenToolButton_2.setAutoRaise(True)
        self.AnzeigeEinsteuungenToolButton_2.setStyleSheet("color:rgb({},{},{},255)".format(92, 174, 219))
        self.AnzeigeEinsteuungenToolButton_2.setObjectName("AnzeigeEinsteuungenToolButton_2")

        self.EUTgroupBox = QtWidgets.QGroupBox(self.AnzeigeEinstellungenGroupBox)
        self.EUTgroupBox.setGeometry(QtCore.QRect(20, 110, 561, 131))
        self.EUTgroupBox.setMinimumSize(QtCore.QSize(561, 131))
        self.EUTgroupBox.setMaximumSize(QtCore.QSize(561, 131))
        self.EUTgroupBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.EUTgroupBox.setCheckable(True)
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(10)
        self.EUTgroupBox.setFont(font)
        self.EUTgroupBox.setObjectName("EUTgroupBox")

        self.KundennameEditor = QtWidgets.QLineEdit(self.EUTgroupBox)
        self.KundennameEditor.setGeometry(QtCore.QRect(140, 30, 121, 31))
        self.KundennameEditor.setMinimumSize(QtCore.QSize(121, 31))
        self.KundennameEditor.setMaximumSize(QtCore.QSize(121, 31))
        self.KundennameEditor.setFont(fontelement)
        self.KundennameEditor.setObjectName("KundennameEditor")

        self.EUTNameEditor = QtWidgets.QLineEdit(self.EUTgroupBox)
        self.EUTNameEditor.setGeometry(QtCore.QRect(430, 30, 121, 31))
        self.EUTNameEditor.setMinimumSize(QtCore.QSize(121, 31))
        self.EUTNameEditor.setMaximumSize(QtCore.QSize(121, 31))
        self.EUTNameEditor.setFont(fontelement)
        self.EUTNameEditor.setObjectName("EUTNameEditor")

        self.BeschribungEditor = QtWidgets.QLineEdit(self.EUTgroupBox)
        self.BeschribungEditor.setGeometry(QtCore.QRect(140, 80, 121, 31))
        self.BeschribungEditor.setMinimumSize(QtCore.QSize(121, 31))
        self.BeschribungEditor.setMaximumSize(QtCore.QSize(121, 31))
        self.BeschribungEditor.setFont(fontelement)
        self.BeschribungEditor.setObjectName("BeschribungEditor")

        self.BedingungenEditor = QtWidgets.QLineEdit(self.EUTgroupBox)
        self.BedingungenEditor.setGeometry(QtCore.QRect(430, 80, 121, 31))
        self.BedingungenEditor.setMinimumSize(QtCore.QSize(121, 31))
        self.BedingungenEditor.setMaximumSize(QtCore.QSize(121, 31))
        self.BedingungenEditor.setFont(fontelement)
        self.BedingungenEditor.setObjectName("BedingungenEditor")

        self.Beschreibung = QtWidgets.QLabel(self.EUTgroupBox)
        self.Beschreibung.setGeometry(QtCore.QRect(10, 80, 131, 31))
        self.Beschreibung.setMinimumSize(QtCore.QSize(131, 31))
        self.Beschreibung.setMaximumSize(QtCore.QSize(131, 31))
        self.Beschreibung.setFont(fontelement)
        self.Beschreibung.setObjectName("Beschreibung")

        self.EUTName = QtWidgets.QLabel(self.EUTgroupBox)
        self.EUTName.setGeometry(QtCore.QRect(300, 30, 101, 31))
        self.EUTName.setMinimumSize(QtCore.QSize(101, 31))
        self.EUTName.setMaximumSize(QtCore.QSize(101, 31))
        self.EUTName.setFont(fontelement)
        self.EUTName.setObjectName("EUTName")

        self.Bedingungen = QtWidgets.QLabel(self.EUTgroupBox)
        self.Bedingungen.setGeometry(QtCore.QRect(300, 80, 121, 31))
        self.Bedingungen.setMinimumSize(QtCore.QSize(121, 31))
        self.Bedingungen.setMaximumSize(QtCore.QSize(121, 31))
        self.Bedingungen.setFont(fontelement)
        self.Bedingungen.setObjectName("Bedingungen")

        self.Kundenname = QtWidgets.QLabel(self.EUTgroupBox)
        self.Kundenname.setGeometry(QtCore.QRect(10, 30, 121, 31))
        self.Kundenname.setMinimumSize(QtCore.QSize(121, 31))
        self.Kundenname.setMaximumSize(QtCore.QSize(121, 31))
        self.Kundenname.setFont(fontelement)
        self.Kundenname.setObjectName("Kundenname")

        self.Equipmentinformations = QtWidgets.QGroupBox(self.AnzeigeEinstellungenGroupBox)
        self.Equipmentinformations.setGeometry(QtCore.QRect(20, 370, 561, 71))
        self.Equipmentinformations.setMinimumSize(QtCore.QSize(561, 71))
        self.Equipmentinformations.setMaximumSize(QtCore.QSize(561, 71))
        self.Equipmentinformations.setCheckable(True)
        self.Equipmentinformations.setObjectName("Equipmentinformations")

        self.Antenne = QtWidgets.QCheckBox(self.Equipmentinformations)
        self.Antenne.setGeometry(QtCore.QRect(260, 30, 101, 31))
        self.Antenne.setMinimumSize(QtCore.QSize(101, 31))
        self.Antenne.setMaximumSize(QtCore.QSize(101, 31))
        self.Antenne.setFont(fontelement)
        self.Antenne.setObjectName("Antenne")

        self.Kabeln = QtWidgets.QCheckBox(self.Equipmentinformations)
        self.Kabeln.setGeometry(QtCore.QRect(430, 30, 91, 31))
        self.Kabeln.setMinimumSize(QtCore.QSize(91, 31))
        self.Kabeln.setMaximumSize(QtCore.QSize(91, 31))
        self.Kabeln.setFont(fontelement)
        self.Kabeln.setObjectName("Kabeln")

        self.Systemkontroller = QtWidgets.QCheckBox(self.Equipmentinformations)
        self.Systemkontroller.setGeometry(QtCore.QRect(10, 30, 171, 31))
        self.Systemkontroller.setMinimumSize(QtCore.QSize(171, 31))
        self.Systemkontroller.setMaximumSize(QtCore.QSize(171, 31))
        self.Systemkontroller.setFont(fontelement)
        self.Systemkontroller.setObjectName("Systemkontroller")

        self.ReportTypeGroupBox = QtWidgets.QGroupBox(ReportWindow)
        self.ReportTypeGroupBox.setGeometry(QtCore.QRect(30, 20, 411, 80))
        self.ReportTypeGroupBox.setMinimumSize(QtCore.QSize(411, 80))
        self.ReportTypeGroupBox.setMaximumSize(QtCore.QSize(411, 80))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setPointSize(10)
        font.setWeight(75)
        self.ReportTypeGroupBox.setFont(font)
        self.ReportTypeGroupBox.setObjectName("ReportTypeGroupBox")

        self.MSWordRadioButton = QtWidgets.QRadioButton(self.ReportTypeGroupBox)
        self.MSWordRadioButton.setGeometry(QtCore.QRect(20, 30, 101, 31))
        self.MSWordRadioButton.setMinimumSize(QtCore.QSize(101, 31))
        self.MSWordRadioButton.setMaximumSize(QtCore.QSize(101, 31))
        self.MSWordRadioButton.setChecked(True)
        self.MSWordRadioButton.setFont(fontelement)
        self.MSWordRadioButton.setObjectName("MSWordRadioButton")

        self.MSExcelRadioButton = QtWidgets.QRadioButton(self.ReportTypeGroupBox)
        self.MSExcelRadioButton.setGeometry(QtCore.QRect(170, 30, 101, 31))
        self.MSExcelRadioButton.setMinimumSize(QtCore.QSize(101, 31))
        self.MSExcelRadioButton.setMaximumSize(QtCore.QSize(101, 31))
        self.MSExcelRadioButton.setFont(fontelement)
        self.MSExcelRadioButton.setObjectName("MSExcelRadioButton")

        self.PDFRadioButton = QtWidgets.QRadioButton(self.ReportTypeGroupBox)
        self.PDFRadioButton.setGeometry(QtCore.QRect(330, 30, 61, 31))
        self.PDFRadioButton.setMinimumSize(QtCore.QSize(61, 31))
        self.PDFRadioButton.setMaximumSize(QtCore.QSize(61, 31))
        self.PDFRadioButton.setFont(fontelement)
        self.PDFRadioButton.setObjectName("PDFRadioButton")

        self.SpeicherungspfadGroupBox = QtWidgets.QGroupBox(ReportWindow)
        self.SpeicherungspfadGroupBox.setGeometry(QtCore.QRect(460, 20, 631, 80))
        self.SpeicherungspfadGroupBox.setMinimumSize(QtCore.QSize(631, 80))
        self.SpeicherungspfadGroupBox.setMaximumSize(QtCore.QSize(631, 80))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(10)
        self.SpeicherungspfadGroupBox.setFont(font)
        self.SpeicherungspfadGroupBox.setObjectName("SpeicherungspfadGroupBox")

        self.SpeichernUnterLabel = QtWidgets.QLabel(self.SpeicherungspfadGroupBox)
        self.SpeichernUnterLabel.setGeometry(QtCore.QRect(20, 30, 151, 31))
        self.SpeichernUnterLabel.setMinimumSize(QtCore.QSize(151, 31))
        self.SpeichernUnterLabel.setMaximumSize(QtCore.QSize(151, 31))
        self.SpeichernUnterLabel.setSizeIncrement(QtCore.QSize(31, 0))
        self.SpeichernUnterLabel.setFont(fontelement)
        self.SpeichernUnterLabel.setObjectName("SpeichernUnterLabel")

        self.SpeichernUnterComboBox = QtWidgets.QComboBox(self.SpeicherungspfadGroupBox)
        self.SpeichernUnterComboBox.setGeometry(QtCore.QRect(230, 30, 341, 31))
        self.SpeichernUnterComboBox.setMinimumSize(QtCore.QSize(341, 31))
        self.SpeichernUnterComboBox.setMaximumSize(QtCore.QSize(341, 31))
        self.SpeichernUnterComboBox.setEditable(True)
        self.SpeichernUnterComboBox.setFont(fontelement)
        self.SpeichernUnterComboBox.setObjectName("SpeichernUnterComboBox")

        self.SpeichernUnterToolButton = QtWidgets.QToolButton(self.SpeicherungspfadGroupBox)
        self.SpeichernUnterToolButton.setGeometry(QtCore.QRect(580, 30, 31, 31))
        self.SpeichernUnterToolButton.setMinimumSize(QtCore.QSize(31, 31))
        self.SpeichernUnterToolButton.setMaximumSize(QtCore.QSize(31, 31))
        self.SpeichernUnterToolButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icon_materials/24.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.SpeichernUnterToolButton.setIcon(icon1)
        self.SpeichernUnterToolButton.setIconSize(QtCore.QSize(31, 31))
        self.SpeichernUnterToolButton.setAutoRaise(True)
        self.SpeichernUnterToolButton.setObjectName("SpeichernUnterToolButton")

        self.ReportWindowOKPushButton = QtWidgets.QPushButton(ReportWindow)
        self.ReportWindowOKPushButton.setGeometry(QtCore.QRect(780, 740, 131, 31))
        self.ReportWindowOKPushButton.setMinimumSize(QtCore.QSize(131, 31))
        self.ReportWindowOKPushButton.setMaximumSize(QtCore.QSize(131, 31))
        self.ReportWindowOKPushButton.setDefault(True)
        self.ReportWindowOKPushButton.setFont(fontelement)
        self.ReportWindowOKPushButton.setObjectName("ReportWindowOKPushButton")

        self.ReportWindowCancelPushButton = QtWidgets.QPushButton(ReportWindow)
        self.ReportWindowCancelPushButton.setGeometry(QtCore.QRect(960, 740, 131, 31))
        self.ReportWindowCancelPushButton.setMinimumSize(QtCore.QSize(131, 31))
        self.ReportWindowCancelPushButton.setMaximumSize(QtCore.QSize(131, 31))
        self.ReportWindowCancelPushButton.setFont(fontelement)
        self.ReportWindowCancelPushButton.setObjectName("ReportWindowCancelPushButton")

        self.retranslateUi(ReportWindow)
        self.ReportWindowCancelPushButton.clicked.connect(ReportWindow.close)
        QtCore.QMetaObject.connectSlotsByName(ReportWindow)

        # definition of signals
        self.MSWordRadioButton.clicked.connect(self.wsword)
        self.MSExcelRadioButton.clicked.connect(self.wsexcel)
        self.PDFRadioButton.clicked.connect(self.wspdf)
        self.AnzeigeEinsteuungenToolButton_1.clicked.connect(self.wordCheckboxSelectAll)
        self.AnzeigeEinsteuungenToolButton_2.clicked.connect(self.wordCheckboxClearAll)
        self.ReportWindowOKPushButton.clicked.connect(self.applySettings)
        self.SpeichernUnterToolButton.clicked.connect(self.saveReport)

        # setting up the background color of this window
        pale = QtGui.QPalette()
        pale.setColor(QtGui.QPalette.Background, QtGui.QColor(248, 248, 248))
        ReportWindow.setPalette(pale)

    def retranslateUi(self, ReportWindow):
        _translate = QtCore.QCoreApplication.translate
        ReportWindow.setWindowTitle(_translate("ReportWindow", "Einstellungen des Reports "))
        self.DetailsGroupBox.setTitle(_translate("ReportWindow", "Details"))
        self.ReportTitelLabel.setText(_translate("ReportWindow", "Titel des Reports:"))
        self.TestIngenieurLabel.setText(_translate("ReportWindow", "Testingenieur:"))
        self.TestDatumLabel.setText(_translate("ReportWindow", "Testdatum:"))
        self.BenutzerNotizenLabel.setText(_translate("ReportWindow", "Benutzernotizen:"))
        self.AnzeigeEinstellungenGroupBox.setTitle(_translate("ReportWindow", "Anzeigeeinstellungen:"))
        self.AllgemeinGroupBox.setTitle(_translate("ReportWindow", "Allgemein"))
        self.AllgemeinSeiteCheckBox.setText(_translate("ReportWindow", "Seite"))
        self.AllgemeinBenutzerNotizenCheckBox.setText(_translate("ReportWindow", "Benutzernotizen"))

        self.AllgemeinDiagrammCheckBox.setText(_translate("ReportWindow", "Einheit"))
        self.TestparameterGroupBox.setTitle(_translate("ReportWindow", "Test-Parameter"))
        self.Effectivefrequency.setText(_translate("ReportWindow", "Effektive Frequenzen"))
        self.Messzeit.setText(_translate("ReportWindow", "Messzeit"))
        self.Attenuation.setText(_translate("ReportWindow", "Attenuation"))
        self.Detektor.setText(_translate("ReportWindow", "Detektor"))
        self.Grenzwerte.setText(_translate("ReportWindow", "Grenzwerte"))
        self.AnzeigeEinsteuungenToolButton_1.setText(_translate("ReportWindow", "+ Alle wählen..."))
        self.AnzeigeEinsteuungenToolButton_2.setText(_translate("ReportWindow", "- Alle entfernen..."))
        self.EUTgroupBox.setTitle(_translate("ReportWindow", "EUT- und Test-Bedingungen"))
        self.Beschreibung.setText(_translate("ReportWindow", "Beschreibung:"))
        self.EUTName.setText(_translate("ReportWindow", "EUT-Name:"))
        self.Bedingungen.setText(_translate("ReportWindow", "Bedingungen:"))
        self.Kundenname.setText(_translate("ReportWindow", "Kundenname:"))
        self.Equipmentinformations.setTitle(_translate("ReportWindow", "Geräteinformationen"))
        self.Antenne.setText(_translate("ReportWindow", "Antenne"))
        self.Kabeln.setText(_translate("ReportWindow", "Kabeln"))
        self.Systemkontroller.setText(_translate("ReportWindow", "Systemcontroller"))
        self.ReportTypeGroupBox.setTitle(_translate("ReportWindow", "Typ des Reports"))
        self.MSWordRadioButton.setText(_translate("ReportWindow", "MS Word"))
        self.MSExcelRadioButton.setText(_translate("ReportWindow", "MS Excel"))
        self.PDFRadioButton.setText(_translate("ReportWindow", "PDF"))
        self.SpeicherungspfadGroupBox.setTitle(_translate("ReportWindow", "Speicherungspfad"))
        self.SpeichernUnterLabel.setText(_translate("ReportWindow", "Speichern unter:"))
        self.ReportWindowOKPushButton.setText(_translate("ReportWindow", "Anwenden"))
        self.ReportWindowCancelPushButton.setText(_translate("ReportWindow", "Zurück"))

        reportpic = cv.imread("./icon_materials/25.png", -1)
        reportpic = png_preprocess(reportpic, 261)
        self.ReportIconLabel.setPixmap(QtGui.QPixmap(reportpic))

    # After clicking the "Anwenden" button on this window, a feedback will be given by using an information messageBox
    def applySettings(self):
        if self.MSWordRadioButton.isChecked():
            messageBox = QtWidgets.QMessageBox()
            messageBox.setWindowTitle('Hinweis')
            messageBox.setIcon(QtWidgets.QMessageBox.Information)
            messageBox.setWindowIcon(QtGui.QIcon('./icon_materials/6.png'))
            messageBox.setText('Die Einstellungen werden erfolgreich angewendet!')
            messageBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
            buttonY = messageBox.button(QtWidgets.QMessageBox.Ok)
            buttonY.setText('Ok')
            messageBox.exec_()
        elif self.MSExcelRadioButton.isChecked():
            messageBox = QtWidgets.QMessageBox()
            messageBox.setWindowTitle('Warnung')
            messageBox.setIcon(QtWidgets.QMessageBox.Warning)
            messageBox.setWindowIcon(QtGui.QIcon('./icon_materials/6.png'))
            messageBox.setText('Die Funktionalität von MS Excel ist noch nicht implementiert!')
            messageBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
            buttonY = messageBox.button(QtWidgets.QMessageBox.Ok)
            buttonY.setText('Ok')
            messageBox.exec_()
        elif self.PDFRadioButton.isChecked():
            messageBox = QtWidgets.QMessageBox()
            messageBox.setWindowTitle('Warnung')
            messageBox.setIcon(QtWidgets.QMessageBox.Warning)
            messageBox.setWindowIcon(QtGui.QIcon('./icon_materials/6.png'))
            messageBox.setText('Die Funktionalität von PDF ist noch nicht implementiert!')
            messageBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
            buttonY = messageBox.button(QtWidgets.QMessageBox.Ok)
            buttonY.setText('Ok')
            messageBox.exec_()

    # When users want to generate the final report in MS Word, the icon of Word will be showed up, indicating that this "Word" mode is chosen.
    def wsword(self):
        reportpic = cv.imread("./icon_materials/25.png", -1)
        reportpic = png_preprocess(reportpic, 261)
        self.ReportIconLabel.setPixmap(QtGui.QPixmap(reportpic))

    # When users want to generate the final report in MS Excel, the icon of Excel will be showed up, indicating that this "Excel" mode is chosen.
    def wsexcel(self):
        reportpic = cv.imread("./icon_materials/26.png", -1)
        reportpic = png_preprocess(reportpic, 261)
        self.ReportIconLabel.setPixmap(QtGui.QPixmap(reportpic))

    # When users want to generate the final report in PDF, the icon of PDF will be showed up, indicating that this "PDF" mode is chosen.
    def wspdf(self):
        reportpic = cv.imread("./icon_materials/27.png", -1)
        reportpic = png_preprocess(reportpic, 261)
        self.ReportIconLabel.setPixmap(QtGui.QPixmap(reportpic))

    # select all choices
    def wordCheckboxSelectAll(self):
        self.AllgemeinSeiteCheckBox.setChecked(True)
        self.AllgemeinBenutzerNotizenCheckBox.setChecked(True)
        self.AllgemeinDiagrammCheckBox.setChecked(True)
        self.EUTgroupBox.setChecked(True)
        self.TestparameterGroupBox.setChecked(True)
        self.Effectivefrequency.setChecked(True)
        self.Detektor.setChecked(True)
        self.Messzeit.setChecked(True)
        self.Attenuation.setChecked(True)
        self.Grenzwerte.setChecked(True)
        self.Equipmentinformations.setChecked(True)
        self.Systemkontroller.setChecked(True)
        self.Antenne.setChecked(True)
        self.Kabeln.setChecked(True)

    # remove all choices
    def wordCheckboxClearAll(self):
        self.AllgemeinSeiteCheckBox.setChecked(False)
        self.AllgemeinBenutzerNotizenCheckBox.setChecked(False)
        self.AllgemeinDiagrammCheckBox.setChecked(False)
        self.EUTgroupBox.setChecked(False)
        self.TestparameterGroupBox.setChecked(False)
        self.Effectivefrequency.setChecked(False)
        self.Detektor.setChecked(False)
        self.Messzeit.setChecked(False)
        self.Attenuation.setChecked(False)
        self.Grenzwerte.setChecked(False)
        self.Equipmentinformations.setChecked(False)
        self.Systemkontroller.setChecked(False)
        self.Antenne.setChecked(False)
        self.Kabeln.setChecked(False)

    # chose the save path and write the name of the generated report.
    def saveReport(self):
        # if "Word" mode is chosen, .docx will be automated added after the name of report
        if self.MSWordRadioButton.isChecked():
            fileName, _ = QtWidgets.QFileDialog.getSaveFileName(None, 'Report speichern', 'd:\\',
                                                                'Dateityp (*.docx)')

        # if "Excel" mode is chosen, .xlsx will be automated added after the name of report
        elif self.MSExcelRadioButton.isChecked():
            fileName, _ = QtWidgets.QFileDialog.getSaveFileName(None, 'Report speichern', 'd:\\',
                                                                'Dateityp (*.xlsx)')

        # if "PDF" mode is chosen, .pdf will be automated added after the name of report
        else:
            fileName, _ = QtWidgets.QFileDialog.getSaveFileName(None, 'Report speichern', 'd:\\',
                                                                'Dateityp (*.pdf)')
        self.SpeichernUnterComboBox.addItem(fileName)
        b = len(self.SpeichernUnterComboBox)
        self.SpeichernUnterComboBox.setCurrentIndex(b - 1)
        self.SpeichernUnterComboBox.currentText()

# function that can process .jpg image
def pic_preprocess(img, new_height):
    show = cv.cvtColor(img, cv.COLOR_BGR2RGB)
    width = show.shape[1]
    height = show.shape[0]
    ratio = float(height / width)
    new_width = int(new_height / ratio)
    show = cv.resize(show, (new_width, new_height))
    totalBytes = show.nbytes
    bytesPerLine = int(totalBytes / new_height)
    return QtGui.QImage(show, new_width, new_height, bytesPerLine, QtGui.QImage.Format_RGB888)

# function that can process .png image
def png_preprocess(img, new_height):
    width = img.shape[1]
    height = img.shape[0]
    ratio = float(height / width)
    new_width = int(new_height / ratio)
    show = cv.resize(img, (new_width, new_height))
    totalBytes = show.nbytes
    bytesPerLine = int(totalBytes / new_height)
    return QtGui.QImage(show, new_width, new_height, bytesPerLine, QtGui.QImage.Format_ARGB32)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ReportWindow = QtWidgets.QWidget()
    ui = Ui_ReportWindow()
    ui.setupUi(ReportWindow)
    ReportWindow.show()
    sys.exit(app.exec_())

